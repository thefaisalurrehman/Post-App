[versions]
## SDK Versions
androidDriver = "1.5.5"
kotlinSerialization = "1.9.24"
ktorClientAndroid = "2.2.4"
minSdk = "26"
targetSdk = "34"
compileSdk = "34"

ktlint-gradle = "11.6.0"

agp = "8.1.2"
kotlin = "1.9.10"
sqldelight = "2.0.0"
compose = "1.5.4"
compose-compiler = "1.5.3"
compose-material3 = "1.1.2"
androidx-activity-compose = "1.8.0"

android-desugaring = "2.0.3"
androidx-core = "1.12.0"
androidx-test-junit = "1.1.5"
androidx-lifecycle = "2.6.2"

junit = "4.13.2"
robolectric = "4.10.3"
turbine = "1.0.0"

kermit = "2.0.1"

coroutines = "1.7.3"
kotlinx-datetime = "0.4.1"
kotlinx-serialization = "1.6.3"
ktor = "2.3.4"
koin = "3.5.0"
multiplatformSettings = "1.1.0"


[libraries]
android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "androidDriver" }
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity-compose" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compose-compiler" }

android-desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugaring" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-junit" }

core = { module = "androidx.core:core", version.ref = "androidx-core" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

gradle-plugin = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "androidDriver" }
junit = { module = "junit:junit", version.ref = "junit" }

koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlinSerialization" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientAndroid" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

multiplatformSettings-common = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

roboelectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
touchlab-kermit-simple = { module = "co.touchlab:kermit-simple", version.ref = "kermit" }

common-sqlDelight = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight"}
common-sqlDelight-extension = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight"}
android-sqlDelight = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight"}
ios-sqlDelight = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-gradle" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqldelight"}

[bundles]
app-ui = [
    "androidx-activity-compose",
    "compose-compiler",
    "androidx-core",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-viewmodel",
    "androidx-lifecycle-compose",
    "compose-ui",
    "compose-ui-tooling",
    "compose-ui-tooling-preview",
    "compose-foundation",
    "compose-material3"
]

ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization", "ktor-client-contentNegotiation"]

shared-commonTest = [
    "kotlin-test",
    "multiplatformSettings-test",
    "koin-test",
    "turbine",
    "coroutines-test",
    "ktor-client-mock"
]
shared-androidTest = [
    "androidx-test-junit",
    "coroutines-test",
    "roboelectric",
]
